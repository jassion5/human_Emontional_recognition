name: "LeNet"
input: "data"
input_dim: 1
input_dim: 3
input_dim: 135
input_dim: 100

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}



layer {
    bottom: "conv1"
    top: "relu1"
    name: "relu1"
    type: "ReLU"
}

layer {
    name: "bn1"
    bottom: "relu1"
    top: "bn1"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "bn1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}





layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
    bottom: "conv2"
    top: "relu2"
    name: "relu2"
    type: "ReLU"
}

layer {
    name: "bn2"
    bottom: "relu2"
    top: "bn2"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "bn2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}




layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip1"
  top: "relu3"
}

layer {
    name: "bn3"
    bottom: "relu3"
    top: "bn3"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}


layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "bn3"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
    name: "prob"
    top: "prob"
    bottom: "ip2"
    type: "Softmax"
}
